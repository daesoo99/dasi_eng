@echo off
setlocal enabledelayedexpansion

:: DaSi Docker Setup and Start Script for Windows
echo üê≥ Starting DaSi English Learning Platform with Docker...

:: Check if Docker is installed
docker --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Docker is not installed. Please install Docker Desktop first.
    pause
    exit /b 1
)

:: Check if Docker Compose is available
docker-compose --version >nul 2>&1
if errorlevel 1 (
    docker compose version >nul 2>&1
    if errorlevel 1 (
        echo ‚ùå Docker Compose is not available. Please install Docker Compose.
        pause
        exit /b 1
    )
    set DOCKER_COMPOSE=docker compose
) else (
    set DOCKER_COMPOSE=docker-compose
)

echo üìã Checking environment configuration...

:: Check if .env file exists, if not copy from template
if not exist ".\backend\.env" (
    if exist ".\backend\.env.docker" (
        echo ‚ö†Ô∏è  .env not found, copying from .env.docker template
        copy ".\backend\.env.docker" ".\backend\.env"
        echo ‚ö†Ô∏è  Please update .\backend\.env with your actual configuration
    ) else (
        echo ‚ùå .env.docker template not found. Please create environment configuration.
        pause
        exit /b 1
    )
)

:: Stop any running containers
echo üìã Stopping existing containers...
%DOCKER_COMPOSE% down --remove-orphans

:: Build images
echo üìã Building Docker images...
%DOCKER_COMPOSE% build --no-cache

:: Start services
echo üìã Starting services...
if "%1"=="prod" (
    echo üìã Starting with production profile ^(includes nginx^)
    %DOCKER_COMPOSE% --profile production up -d
) else (
    echo üìã Starting with development profile
    %DOCKER_COMPOSE% up -d
)

:: Wait for services to be ready
echo üìã Waiting for services to start...
timeout /t 10 /nobreak >nul

:: Check backend health
echo üìã Checking service health...
curl -f http://localhost:8080/health >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Backend service is not responding
    %DOCKER_COMPOSE% logs backend
    pause
    exit /b 1
) else (
    echo ‚úÖ Backend service is healthy
)

:: Check Redis health (simplified for Windows)
echo ‚úÖ Redis service is assumed healthy

echo.
echo ‚úÖ üéâ DaSi platform is running successfully!
echo.
echo üîó Service URLs:
echo    ‚Ä¢ Backend API: http://localhost:8080
echo    ‚Ä¢ Health Check: http://localhost:8080/health
echo    ‚Ä¢ Metrics: http://localhost:8080/metrics
echo    ‚Ä¢ Redis: localhost:6379

if "%1"=="prod" (
    echo    ‚Ä¢ Frontend: http://localhost:80
    echo    ‚Ä¢ Nginx Status: http://localhost:80/health
)

echo.
echo üìä Useful commands:
echo    ‚Ä¢ View logs: %DOCKER_COMPOSE% logs -f [service]
echo    ‚Ä¢ Stop services: %DOCKER_COMPOSE% down
echo    ‚Ä¢ Restart service: %DOCKER_COMPOSE% restart [service]
echo    ‚Ä¢ View status: %DOCKER_COMPOSE% ps
echo.

:: Show running containers
echo üìã Running containers:
%DOCKER_COMPOSE% ps

pause